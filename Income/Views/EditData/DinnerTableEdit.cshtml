@model object

<!DOCTYPE html>

<html xmlns:v-bind="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8">
    <title>餐桌编辑</title>
</head>
<body>
<style>
.el-table .warning-row {
    background: #EBEEF5;
  }

  .el-table .success-row {
    background: #f2f6fc;
  }
    .time {
        font-size: 13px;
        color: #999;
    }
  
    .bottom {
        margin-top: 13px;
        line-height: 12px;
    }

    .button {
        padding: 0;
        float: right;
    }

    .image {
        width: 100%;
        display: block;
    }

    .clearfix:before,
    .clearfix:after {
        display: table;
        content: "";
    }
  
    .clearfix:after {
        clear: both
    }
</style>
<div id="app">
    <div style="float: right;">
        <el-button type="primary" @@click="addDinnerTable" style="margin:20px 20px 10px 10px">添加</el-button>
        </div>
    <template>
        <el-table
            :data="dinerTables"
            style="width: 100%"
            height="650"
            max-height="650">
            @* :row-class-name="tableRowClassName"> *@
            <el-table-column
                type="index"
                label="序号"
                width="180"
                align="center">
            </el-table-column>
            <el-table-column
                prop="name"
                label="名称"
                width="180"
                align="center">
            </el-table-column>
            <el-table-column
                prop="date"
                label="日期"
                align="center">
            </el-table-column>
            <el-table-column
                label="操作"
                align="center">
                <template slot-scope="scope">
                    <el-button type="warning" size="mini" @@click="editDinnerTable(scope.row)">修改</el-button>
                    <el-button type="danger" size="mini" @@click="deleteDinnerTable(scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
    </template>
    <template>
        <el-pagination
            background
            layout="prev, pager, next"
            :total="totalNum"
            :page-size="pageSize"
            @@current-change="changePage">
        </el-pagination>
    </template>
    <Modal
        :value="showAddOrEdit"
        :title="title"
        width="500px;"
        :mask-closable="false"
        @@on-ok="ok"
        @@on-cancel="cancel">
        <el-form v-bind:model="dinnerTableModel">
            <el-form-item label="餐桌名称：" prop="name">
                <el-input v-model="dinnerTableModel.name" placeholder="请输入内容"></el-input>
            </el-form-item>
        </el-form>
    </Modal>
    
    <Modal
        :value="showDeleted"
        title="删除"
        width="500px;"
        :mask-closable="false"
        @@on-ok="yesDeleted"
        @@on-cancel="cancel">
        <div>确定删除此条数据么？</div>
        </Modal>
</div>
</body>
<script>
    let app = new Vue({
        el: '#app', //DOM中id为app的HTML div标签
        data: {
            showDeleted: false,
            dinerTables:[],
            totalNum: 100,
            pageSize: 10,
            pageNum: 1,
            showAddOrEdit:false,
            title:'',
            dinnerTableModel:{
                name:"",
                uniquecode: "",
                code:"",
                isSaveOrEdit:1, //1save, 2edit
            }
        },
        methods: {
            deleteDinnerTable:function(row) {
                debugger;
                let that = this;
                that.showDeleted = true;
                that.dinnerTableModel.code = row.code;
            },
            editDinnerTable:function(row) {
                debugger;
                let that = this;
                that.showAddOrEdit = true;
                that.title = "修改";
                that.dinnerTableModel.name = row.name;
                that.dinnerTableModel.uniquecode = row.uniqueCode;
                that.dinnerTableModel.code = row.code;
                that.dinnerTableModel.isSaveOrEdit = 2;
            },
            addDinnerTable: function() {
                debugger;
                let that = this;
                that.showAddOrEdit = true;
                that.title = "添加";
                that.dinnerTableModel.isSaveOrEdit = 1;
                that.dinnerTableModel.uniquecode = top.app.uniqueCode;
            },
            yesDeleted: function() {
                let that = this;
                $.get("/DinnerTable/deletedDinnerTable", {
                    uniqueCode:top.app.uniqueCode,
                    code: that.dinnerTableModel.code,
                },function (resp) {  
                    let type = resp.code == 1? 'success' : 'error';
                    top.app.alertMessage(type, resp.message);
                    if (resp.code === 1) {
                        // that.pageNum = 1;
                        that.getDinnerTableList();
                    }
                }, 'json');
                this.showDeleted = false;
            },
            ok: function(){
                let that = this;
                let message;
                if(isEmpty(that.dinnerTableModel.name)) {
                    message = "餐桌名称不能为空";
                }
                if(isEmpty(message)) {
                    that.dinnerTableModel.uniquecode = top.app.uniqueCode;
                    $.get("/DinnerTable/AddOrEditDinnerTable", {
                        uniqueCode:top.app.uniqueCode,
                        name: that.dinnerTableModel.name,
                        code: that.dinnerTableModel.code,
                        isSaveOrEdit: that.dinnerTableModel.isSaveOrEdit,
                    },function (resp) {  
                        let type = resp.code == 1? 'success' : 'error';
                        top.app.alertMessage(type, resp.message);
                        if (resp.code === 1) {
                            that.pageNum = 1;
                            that.getDinnerTableList();
                        }
                    }, 'json');
                }else {
                    top.app.alertMessage('warning', message);
                }
                
                this.showAddOrEdit = false;
            },
            cancel:function() {
                this.showAddOrEdit = false;
                this.showDeleted = false;
            },
            changePage:function(page) {
                debugger;
                this.pageNum = page;
                this.getDinnerTableList();
            },
            getDinnerTableList: function () {
                let that = this;
                $.get("/DinnerTable/GetDinnerTableList", {
                    uniqueCode:top.app.uniqueCode,
                    pageSize: that.pageSize,
                    pageNum: that.pageNum
                },function (resp) {         
                    if (resp.code === 1) {
                        that.dinerTables = resp.data.dinnerTables;
                        that.totalNum = resp.data.totalNum;
                    }
                }, 'json');
                
            },
            tableRowClassName({row, rowIndex}) {
                let temp = rowIndex % 2;
                if (temp === 0) {
                  return 'warning-row';
                } else if (temp === 1) {
                  return 'success-row';
                }
                return '';
            }
        },
        beforeCreate: function () {
            
        },
        created: function () {
            this.getDinnerTableList();
        },
        beforeMount: function () {
            
        },
        mounted: function () {
        },
        beforeUpdate: function () {
           
        },
        updated: function () {
            
        },
        beforeDestroy: function () {
            
        },
        destroyed: function () {
            
        }
    })    
</script>
</html>